syntax = "proto3";
package dogma.interop.v1.discover;

option go_package = "github.com/dogmatiq/interopspec/discoverspec";

// DiscoverAPI is a service for discovering the applications hosted on a server.
service DiscoverAPI {
  // Check is a no-op that allows the client to check if the DiscoverAPI is
  // implemented by a server without the need for the server to implement the
  // gRPC reflection services.
  //
  // This is implemented as a separate operation to Watch() because Watch()
  // returns a stream. A client requires at least one response to be received
  // before it can definitively say that the method has been implemented, but
  // it's possible that a successful and well-behaved call to Watch() never
  // sends any responses.
  rpc Check(CheckRequest) returns (CheckResponse);

  // Watch starts watching the server for updates to the availability of Dogma
  // applications.
  //
  // When the call is first made the client sends a response for each
  // application that is currently available on the server. After this time the
  // server sends a response each time the availability of a specific
  // application changes.
  rpc Watch(WatchRequest) returns (stream WatchResponse);
}

message CheckRequest {}

message CheckResponse {}

message WatchRequest {}

message WatchResponse {
  // Application is the identity of the Dogma application that the
  Identity application = 1;

  // Available indicates whether the application should currently be considered
  // available or not.
  bool available = 2;
}

// Identity represents the identity of an application.
message Identity {
  // Name is the application's unique name.
  string name = 1;

  // Key is the application's immutable, unique key.
  string key = 2;
}
