// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: github.com/dogmatiq/interopspec/presencespec/presenceapi.proto

package presencespec

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchRequest) Reset() {
	*x = WatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequest) ProtoMessage() {}

func (x *WatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequest.ProtoReflect.Descriptor instead.
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescGZIP(), []int{0}
}

type WatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchResponse) Reset() {
	*x = WatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponse) ProtoMessage() {}

func (x *WatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponse.ProtoReflect.Descriptor instead.
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescGZIP(), []int{1}
}

var File_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto protoreflect.FileDescriptor

var file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x73, 0x70, 0x65,
	0x63, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x6b, 0x0a, 0x0b,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x50, 0x49, 0x12, 0x5c, 0x0a, 0x05, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x27, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescData = file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDesc
)

func file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescData)
	})
	return file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDescData
}

var file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_goTypes = []interface{}{
	(*WatchRequest)(nil),  // 0: dogma.interop.v1.presence.WatchRequest
	(*WatchResponse)(nil), // 1: dogma.interop.v1.presence.WatchResponse
}
var file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_depIdxs = []int32{
	0, // 0: dogma.interop.v1.presence.PresenceAPI.Watch:input_type -> dogma.interop.v1.presence.WatchRequest
	1, // 1: dogma.interop.v1.presence.PresenceAPI.Watch:output_type -> dogma.interop.v1.presence.WatchResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_init() }
func file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_init() {
	if File_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto = out.File
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_rawDesc = nil
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_goTypes = nil
	file_github_com_dogmatiq_interopspec_presencespec_presenceapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PresenceAPIClient is the client API for PresenceAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PresenceAPIClient interface {
	// Watch starts watching the server until it goes offline.
	//
	// The server MUST NOT send any responses.
	//
	// The caller SHOULD await a response (which is never sent) until an error
	// occurs, indicating that the server has gone offline.
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (PresenceAPI_WatchClient, error)
}

type presenceAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewPresenceAPIClient(cc grpc.ClientConnInterface) PresenceAPIClient {
	return &presenceAPIClient{cc}
}

func (c *presenceAPIClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (PresenceAPI_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PresenceAPI_serviceDesc.Streams[0], "/dogma.interop.v1.presence.PresenceAPI/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &presenceAPIWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PresenceAPI_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type presenceAPIWatchClient struct {
	grpc.ClientStream
}

func (x *presenceAPIWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PresenceAPIServer is the server API for PresenceAPI service.
type PresenceAPIServer interface {
	// Watch starts watching the server until it goes offline.
	//
	// The server MUST NOT send any responses.
	//
	// The caller SHOULD await a response (which is never sent) until an error
	// occurs, indicating that the server has gone offline.
	Watch(*WatchRequest, PresenceAPI_WatchServer) error
}

// UnimplementedPresenceAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPresenceAPIServer struct {
}

func (*UnimplementedPresenceAPIServer) Watch(*WatchRequest, PresenceAPI_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterPresenceAPIServer(s *grpc.Server, srv PresenceAPIServer) {
	s.RegisterService(&_PresenceAPI_serviceDesc, srv)
}

func _PresenceAPI_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PresenceAPIServer).Watch(m, &presenceAPIWatchServer{stream})
}

type PresenceAPI_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type presenceAPIWatchServer struct {
	grpc.ServerStream
}

func (x *presenceAPIWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PresenceAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dogma.interop.v1.presence.PresenceAPI",
	HandlerType: (*PresenceAPIServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _PresenceAPI_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/dogmatiq/interopspec/presencespec/presenceapi.proto",
}
