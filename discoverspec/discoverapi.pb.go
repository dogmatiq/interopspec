// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: github.com/dogmatiq/interopspec/discoverspec/discoverapi.proto

package discoverspec

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WatchApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchApplicationsRequest) Reset() {
	*x = WatchApplicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchApplicationsRequest) ProtoMessage() {}

func (x *WatchApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchApplicationsRequest.ProtoReflect.Descriptor instead.
func (*WatchApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescGZIP(), []int{0}
}

type WatchApplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity is the identity key of the Dogma application that the response is
	// about.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Available indicates whether the application should currently be considered
	// available or not.
	Available bool `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *WatchApplicationsResponse) Reset() {
	*x = WatchApplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchApplicationsResponse) ProtoMessage() {}

func (x *WatchApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchApplicationsResponse.ProtoReflect.Descriptor instead.
func (*WatchApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescGZIP(), []int{1}
}

func (x *WatchApplicationsResponse) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *WatchApplicationsResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

// Identity represents the identity of an application.
type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the application's unique name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Key is the application's immutable, unique key.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescGZIP(), []int{2}
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Identity) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto protoreflect.FileDescriptor

var file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x67,
	0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x73, 0x70, 0x65,
	0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x19, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x30,
	0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x32, 0x90, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x50, 0x49,
	0x12, 0x80, 0x01, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x6f,
	0x67, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x6f, 0x67, 0x6d, 0x61, 0x74, 0x69, 0x71, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescOnce sync.Once
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescData = file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDesc
)

func file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescGZIP() []byte {
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescOnce.Do(func() {
		file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescData)
	})
	return file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDescData
}

var file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_goTypes = []interface{}{
	(*WatchApplicationsRequest)(nil),  // 0: dogma.interop.v1.discover.WatchApplicationsRequest
	(*WatchApplicationsResponse)(nil), // 1: dogma.interop.v1.discover.WatchApplicationsResponse
	(*Identity)(nil),                  // 2: dogma.interop.v1.discover.Identity
}
var file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_depIdxs = []int32{
	0, // 0: dogma.interop.v1.discover.DiscoverAPI.WatchApplications:input_type -> dogma.interop.v1.discover.WatchApplicationsRequest
	1, // 1: dogma.interop.v1.discover.DiscoverAPI.WatchApplications:output_type -> dogma.interop.v1.discover.WatchApplicationsResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_init() }
func file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_init() {
	if File_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchApplicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchApplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_goTypes,
		DependencyIndexes: file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_depIdxs,
		MessageInfos:      file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_msgTypes,
	}.Build()
	File_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto = out.File
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_rawDesc = nil
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_goTypes = nil
	file_github_com_dogmatiq_interopspec_discoverspec_discoverapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiscoverAPIClient is the client API for DiscoverAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoverAPIClient interface {
	// WatchApplications starts watching the server for updates to the
	// availability of Dogma applications.
	//
	// When the call is first made the client sends a response for each
	// application that is currently available on the server. After this time the
	// server sends a response each time the availability of a specific
	// application changes.
	WatchApplications(ctx context.Context, in *WatchApplicationsRequest, opts ...grpc.CallOption) (DiscoverAPI_WatchApplicationsClient, error)
}

type discoverAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscoverAPIClient(cc grpc.ClientConnInterface) DiscoverAPIClient {
	return &discoverAPIClient{cc}
}

func (c *discoverAPIClient) WatchApplications(ctx context.Context, in *WatchApplicationsRequest, opts ...grpc.CallOption) (DiscoverAPI_WatchApplicationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiscoverAPI_serviceDesc.Streams[0], "/dogma.interop.v1.discover.DiscoverAPI/WatchApplications", opts...)
	if err != nil {
		return nil, err
	}
	x := &discoverAPIWatchApplicationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiscoverAPI_WatchApplicationsClient interface {
	Recv() (*WatchApplicationsResponse, error)
	grpc.ClientStream
}

type discoverAPIWatchApplicationsClient struct {
	grpc.ClientStream
}

func (x *discoverAPIWatchApplicationsClient) Recv() (*WatchApplicationsResponse, error) {
	m := new(WatchApplicationsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DiscoverAPIServer is the server API for DiscoverAPI service.
type DiscoverAPIServer interface {
	// WatchApplications starts watching the server for updates to the
	// availability of Dogma applications.
	//
	// When the call is first made the client sends a response for each
	// application that is currently available on the server. After this time the
	// server sends a response each time the availability of a specific
	// application changes.
	WatchApplications(*WatchApplicationsRequest, DiscoverAPI_WatchApplicationsServer) error
}

// UnimplementedDiscoverAPIServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoverAPIServer struct {
}

func (*UnimplementedDiscoverAPIServer) WatchApplications(*WatchApplicationsRequest, DiscoverAPI_WatchApplicationsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchApplications not implemented")
}

func RegisterDiscoverAPIServer(s *grpc.Server, srv DiscoverAPIServer) {
	s.RegisterService(&_DiscoverAPI_serviceDesc, srv)
}

func _DiscoverAPI_WatchApplications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchApplicationsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiscoverAPIServer).WatchApplications(m, &discoverAPIWatchApplicationsServer{stream})
}

type DiscoverAPI_WatchApplicationsServer interface {
	Send(*WatchApplicationsResponse) error
	grpc.ServerStream
}

type discoverAPIWatchApplicationsServer struct {
	grpc.ServerStream
}

func (x *discoverAPIWatchApplicationsServer) Send(m *WatchApplicationsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DiscoverAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dogma.interop.v1.discover.DiscoverAPI",
	HandlerType: (*DiscoverAPIServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchApplications",
			Handler:       _DiscoverAPI_WatchApplications_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/dogmatiq/interopspec/discoverspec/discoverapi.proto",
}
